Print("======================================");
kill(all);
print("quiz 16.1");
load("vect");
mu0:4*%pi*10^(-7);
epsilon0:8.85418782*10^(-12);
c:3*10^8;


R1:20;
R2:40;
R3:10;

eq1:-i1+v1/R1+(v1-v2)/R2=0;
eq2:-i2+v2/R3+(v2-v1)/R2=0;

solnlst:solve([eq1,eq2],[i1,i2]);


Print("======================================");
kill(all);
print("quiz 16.2");
load("vect");
mu0:4*%pi*10^(-7);
epsilon0:8.85418782*10^(-12);
c:3*10^8;

ia:3;
R1:20;
R2:40;
R3:10;
R4:30;
eq1:-ia+v1/R1+(v1-v2)/R2=0;
eq2:v2/R4+v2/R3+(v2-v1)/R2=0;

solnlst:solve([eq1,eq2],[v1,v2]);

Print("======================================");
kill(all);
print("example 16.3a");
load("vect");
mu0:4*%pi*10^(-7);
epsilon0:8.85418782*10^(-12);
c:3*10^8;

eq1:-%i*4/3*i1-%i*8/3*i2=10;
eq2:-%i*8/3*i1+(6-%i*4/3)*i2=0;

solnlst:solve([eq1,eq2],[i1,i2]);
soln:solnlst[1];
sol:map(rhs,soln);
ki1:sol[1];
ki2:sol[2];

float(abs(ki1));
float(carg(ki1)*180/%pi);
float(abs(ki2));
float(carg(ki2)*180/%pi);

Print("======================================");
kill(all);
print("example 16.3b");
load("vect");
mu0:4*%pi*10^(-7);
epsilon0:8.85418782*10^(-12);
c:3*10^8;

va:10;
Z1:-%i*4;
Z2:%i*2;
Z3:-%i*4;
Z4:6;

eq1:-i1+va/Z1+(va-v2)/Z2=0;
eq2:(v2-va)/Z2+v2/Z3+v2/Z4=0;

solnlst:solve([eq1,eq2],[i1,v2]);
soln:solnlst[1];

sol:map(rhs,soln);
ki1:sol[1];
kv2:sol[2];

ki2:-kv2/Z4;

float(abs(ki1));
float(carg(ki1)*180/%pi);
float(abs(ki2));
float(carg(ki2)*180/%pi);


Print("======================================");
kill(all);
print("example 16.4");
load("vect");
mu0:4*%pi*10^(-7);
epsilon0:8.85418782*10^(-12);
c:3*10^8;

Z1:-2*%i;
Z2:4*%i;
Z3:6;

v2:Z3/(Z1+Z3)*v1;
rectform(v1/v2);

i1:v1/(Z1+Z3);

rectform(i1/v2);

eq1:(vx-v1)/Z1+vx/Z2+vx/Z3=0;
soln:solve(eq1,vx);
sol:map(rhs,soln);
kvx:sol[1];

ki2:rectform(-kvx/Z2);

i1:(v1-kvx)/Z1;
rectform(i1);

Print("======================================");
kill(all);
print("example 16.6");
load("vect");
mu0:4*%pi*10^(-7);
epsilon0:8.85418782*10^(-12);
c:3*10^8;


A:1+%i*w;
B:2+%i*w;
C:%i*w;
D:1+%i*w;

AB:matrix([A,B],[C,D]);

AB . AB . AB;
rectform(%);
